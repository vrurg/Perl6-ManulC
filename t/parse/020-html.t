use v6;
use Test;

use ManulC::Parser::HTML;
#no precompilation;
#use Grammar::Tracer;

grammar TestHTML does HTML-Tag {
    rule TOP { <mdHTMLTag> }
}

subtest {
    my %tests =
        "simple tag - structure" =>
        { 
            tag => "<a>",
            struct =>
                Match.new(list => (), hash => Map.new((:mdHTMLTag(Match.new(list => (Match.new(list => (), hash => Map.new((:mdHTMLStartTag(Match.new(list => (), hash => Map.new((:mdHTMLAttribute([]),:mdHTMLTagName(Match.new(list => (), hash => Map.new((:alnum([]),:alpha(Match.new(list => (), hash => Map.new(()), pos => 2, from => 1, orig => "<a>", made => Any)))), pos => 2, from => 1, orig => "<a>", made => Any)))), pos => 2, from => 1, orig => "<a>", made => Any)))), pos => 2, from => 1, orig => "<a>", made => Any),), hash => Map.new(()), pos => 3, from => 0, orig => "<a>", made => Any)))), pos => 3, from => 0, orig => "<a>", made => Any),
        },
        "simple tag with space" =>
        {
            tag => "<a >",
            struct =>
                Match.new(hash => Map.new((:mdHTMLTag(Match.new(hash => Map.new(()), from => 0, list => (Match.new(hash => Map.new((:mdHTMLStartTag(Match.new(hash => Map.new((:mdHTMLAttribute([]),:mdHTMLTagName(Match.new(hash => Map.new((:alnum([]),:alpha(Match.new(hash => Map.new(()), from => 1, list => (), made => Any, pos => 2, orig => "<a >")))), from => 1, list => (), made => Any, pos => 2, orig => "<a >")))), from => 1, list => (), made => Any, pos => 3, orig => "<a >")))), from => 1, list => (), made => Any, pos => 3, orig => "<a >"),), made => Any, pos => 4, orig => "<a >")))), from => 0, list => (), made => Any, pos => 4, orig => "<a >"),
        },
        "keyword attribute value" =>
        {
            tag => "<a href=keyword>",
            struct =>
                Match.new(list => (), made => Any, hash => Map.new((:mdHTMLTag(Match.new(list => (Match.new(list => (), made => Any, hash => Map.new((:mdHTMLStartTag(Match.new(list => (), made => Any, hash => Map.new((:mdHTMLAttribute([Match.new(list => (), made => Any, hash => Map.new((:mdHTMLAttrName(Match.new(list => (), made => Any, hash => Map.new(()), pos => 7, orig => "<a href=keyword>", from => 3)),:mdHTMLAttrVal(Match.new(list => (), made => Any, hash => Map.new((:mdHTMLValue(Match.new(list => (), made => Any, hash => Map.new((:mdHTMLCharText([Match.new(list => (), made => Any, hash => Map.new(()), pos => 15, orig => "<a href=keyword>", from => 8)]),:mdHTMLEntity([]))), pos => 15, orig => "<a href=keyword>", from => 8)))), pos => 15, orig => "<a href=keyword>", from => 8)))), pos => 15, orig => "<a href=keyword>", from => 3)]),:mdHTMLTagName(Match.new(list => (), made => Any, hash => Map.new((:alnum([]),:alpha(Match.new(list => (), made => Any, hash => Map.new(()), pos => 2, orig => "<a href=keyword>", from => 1)))), pos => 2, orig => "<a href=keyword>", from => 1)))), pos => 15, orig => "<a href=keyword>", from => 1)))), pos => 15, orig => "<a href=keyword>", from => 1),), made => Any, hash => Map.new(()), pos => 16, orig => "<a href=keyword>", from => 0)))), pos => 16, orig => "<a href=keyword>", from => 0),
        },
        "double-quoted attribute value" =>
        {
            tag => q{<a href="keyword">},
            struct =>
                Match.new(hash => Map.new((:mdHTMLTag(Match.new(hash => Map.new(()), list => (Match.new(hash => Map.new((:mdHTMLStartTag(Match.new(hash => Map.new((:mdHTMLAttribute([Match.new(hash => Map.new((:mdHTMLAttrName(Match.new(hash => Map.new(()), list => (), made => Any, orig => "<a href=\"keyword\">", from => 3, pos => 7)),:mdHTMLAttrVal(Match.new(hash => Map.new((:mdHTMLValue(Match.new(hash => Map.new((:mdHTMLCharText([Match.new(hash => Map.new(()), list => (), made => Any, orig => "<a href=\"keyword\">", from => 9, pos => 16)]),:mdHTMLEntity([]))), list => (), made => Any, orig => "<a href=\"keyword\">", from => 9, pos => 16)))), list => (), made => Any, orig => "<a href=\"keyword\">", from => 8, pos => 17)))), list => (), made => Any, orig => "<a href=\"keyword\">", from => 3, pos => 17)]),:mdHTMLTagName(Match.new(hash => Map.new((:alnum([]),:alpha(Match.new(hash => Map.new(()), list => (), made => Any, orig => "<a href=\"keyword\">", from => 1, pos => 2)))), list => (), made => Any, orig => "<a href=\"keyword\">", from => 1, pos => 2)))), list => (), made => Any, orig => "<a href=\"keyword\">", from => 1, pos => 17)))), list => (), made => Any, orig => "<a href=\"keyword\">", from => 1, pos => 17),), made => Any, orig => "<a href=\"keyword\">", from => 0, pos => 18)))), list => (), made => Any, orig => "<a href=\"keyword\">", from => 0, pos => 18),
        },
        "single-quoted attribute value" =>
        {
            tag => q{<a href='keyword'>},
            struct =>
                Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new((:mdHTMLTag(Match.new(list => (Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new((:mdHTMLStartTag(Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new((:mdHTMLAttribute([Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new((:mdHTMLAttrName(Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new(()), pos => 7, from => 3)),:mdHTMLAttrVal(Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new((:mdHTMLValue(Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new((:mdHTMLCharText([Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new(()), pos => 16, from => 9)]),:mdHTMLEntity([]))), pos => 16, from => 9)))), pos => 17, from => 8)))), pos => 17, from => 3)]),:mdHTMLTagName(Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new((:alnum([]),:alpha(Match.new(list => (), orig => "<a href='keyword'>", made => Any, hash => Map.new(()), pos => 2, from => 1)))), pos => 2, from => 1)))), pos => 17, from => 1)))), pos => 17, from => 1),), orig => "<a href='keyword'>", made => Any, hash => Map.new(()), pos => 18, from => 0)))), pos => 18, from => 0),
        },
        "keyword attribute value / named char inside" =>
        {
            tag => "<a href=key&dot;word>",
            struct =>
                Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new((:mdHTMLTag(Match.new(list => (Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new((:mdHTMLStartTag(Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new((:mdHTMLAttribute([Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new((:mdHTMLAttrName(Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new(()), pos => 7, made => Any, from => 3)),:mdHTMLAttrVal(Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new((:mdHTMLValue(Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new((:mdHTMLCharText([Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new(()), pos => 11, made => Any, from => 8), Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new(()), pos => 20, made => Any, from => 16)]),:mdHTMLEntity([Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new((:mdHTMLCharReference(Match.new(list => (Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new(()), pos => 15, made => Any, from => 12),), orig => "<a href=key\&dot;word>", hash => Map.new(()), pos => 15, made => Any, from => 12)))), pos => 16, made => Any, from => 11)]))), pos => 20, made => Any, from => 8)))), pos => 20, made => Any, from => 8)))), pos => 20, made => Any, from => 3)]),:mdHTMLTagName(Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new((:alnum([]),:alpha(Match.new(list => (), orig => "<a href=key\&dot;word>", hash => Map.new(()), pos => 2, made => Any, from => 1)))), pos => 2, made => Any, from => 1)))), pos => 20, made => Any, from => 1)))), pos => 20, made => Any, from => 1),), orig => "<a href=key\&dot;word>", hash => Map.new(()), pos => 21, made => Any, from => 0)))), pos => 21, made => Any, from => 0),
        },
        "double-quoted attribute value / named char inside" =>
        {
            tag => q{<a href="key&dot;word">},
            struct =>
                Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new((:mdHTMLTag(Match.new(list => (Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new((:mdHTMLStartTag(Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new((:mdHTMLAttribute([Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new((:mdHTMLAttrName(Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new(()), pos => 7, made => Any, from => 3)),:mdHTMLAttrVal(Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new((:mdHTMLValue(Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new((:mdHTMLCharText([Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new(()), pos => 12, made => Any, from => 9), Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new(()), pos => 21, made => Any, from => 17)]),:mdHTMLEntity([Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new((:mdHTMLCharReference(Match.new(list => (Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new(()), pos => 16, made => Any, from => 13),), orig => "<a href=\"key\&dot;word\">", hash => Map.new(()), pos => 16, made => Any, from => 13)))), pos => 17, made => Any, from => 12)]))), pos => 21, made => Any, from => 9)))), pos => 22, made => Any, from => 8)))), pos => 22, made => Any, from => 3)]),:mdHTMLTagName(Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new((:alnum([]),:alpha(Match.new(list => (), orig => "<a href=\"key\&dot;word\">", hash => Map.new(()), pos => 2, made => Any, from => 1)))), pos => 2, made => Any, from => 1)))), pos => 22, made => Any, from => 1)))), pos => 22, made => Any, from => 1),), orig => "<a href=\"key\&dot;word\">", hash => Map.new(()), pos => 23, made => Any, from => 0)))), pos => 23, made => Any, from => 0),
        },
        "single-quoted attribute value / named char inside" =>
        {
            tag => q{<a href='key&dot;word'>},
            struct =>
                Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new((:mdHTMLTag(Match.new(list => (Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new((:mdHTMLStartTag(Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new((:mdHTMLAttribute([Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new((:mdHTMLAttrName(Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new(()), pos => 7, made => Any, from => 3)),:mdHTMLAttrVal(Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new((:mdHTMLValue(Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new((:mdHTMLCharText([Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new(()), pos => 12, made => Any, from => 9), Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new(()), pos => 21, made => Any, from => 17)]),:mdHTMLEntity([Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new((:mdHTMLCharReference(Match.new(list => (Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new(()), pos => 16, made => Any, from => 13),), orig => "<a href='key\&dot;word'>", hash => Map.new(()), pos => 16, made => Any, from => 13)))), pos => 17, made => Any, from => 12)]))), pos => 21, made => Any, from => 9)))), pos => 22, made => Any, from => 8)))), pos => 22, made => Any, from => 3)]),:mdHTMLTagName(Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new((:alnum([]),:alpha(Match.new(list => (), orig => "<a href='key\&dot;word'>", hash => Map.new(()), pos => 2, made => Any, from => 1)))), pos => 2, made => Any, from => 1)))), pos => 22, made => Any, from => 1)))), pos => 22, made => Any, from => 1),), orig => "<a href='key\&dot;word'>", hash => Map.new(()), pos => 23, made => Any, from => 0)))), pos => 23, made => Any, from => 0),
        },
        "keyword attribute value / named char at end" =>
        {
            tag => "<a href=keyword&quot;>",
            struct =>
                Match.new(made => Any, hash => Map.new((:mdHTMLTag(Match.new(made => Any, hash => Map.new(()), pos => 22, list => (Match.new(made => Any, hash => Map.new((:mdHTMLStartTag(Match.new(made => Any, hash => Map.new((:mdHTMLAttribute([Match.new(made => Any, hash => Map.new((:mdHTMLAttrName(Match.new(made => Any, hash => Map.new(()), pos => 7, list => (), from => 3, orig => "<a href=keyword\&quot;>")),:mdHTMLAttrVal(Match.new(made => Any, hash => Map.new((:mdHTMLValue(Match.new(made => Any, hash => Map.new((:mdHTMLCharText([Match.new(made => Any, hash => Map.new(()), pos => 15, list => (), from => 8, orig => "<a href=keyword\&quot;>"), Match.new(made => Any, hash => Map.new(()), pos => 21, list => (), from => 21, orig => "<a href=keyword\&quot;>")]),:mdHTMLEntity([Match.new(made => Any, hash => Map.new((:mdHTMLCharReference(Match.new(made => Any, hash => Map.new(()), pos => 20, list => (Match.new(made => Any, hash => Map.new(()), pos => 20, list => (), from => 16, orig => "<a href=keyword\&quot;>"),), from => 16, orig => "<a href=keyword\&quot;>")))), pos => 21, list => (), from => 15, orig => "<a href=keyword\&quot;>")]))), pos => 21, list => (), from => 8, orig => "<a href=keyword\&quot;>")))), pos => 21, list => (), from => 8, orig => "<a href=keyword\&quot;>")))), pos => 21, list => (), from => 3, orig => "<a href=keyword\&quot;>")]),:mdHTMLTagName(Match.new(made => Any, hash => Map.new((:alnum([]),:alpha(Match.new(made => Any, hash => Map.new(()), pos => 2, list => (), from => 1, orig => "<a href=keyword\&quot;>")))), pos => 2, list => (), from => 1, orig => "<a href=keyword\&quot;>")))), pos => 21, list => (), from => 1, orig => "<a href=keyword\&quot;>")))), pos => 21, list => (), from => 1, orig => "<a href=keyword\&quot;>"),), from => 0, orig => "<a href=keyword\&quot;>")))), pos => 22, list => (), from => 0, orig => "<a href=keyword\&quot;>"),
        },
        "double-quoted attribute value / named char at end" =>
        {
            tag => q{<a href="keyword&quot;">},
            struct =>
                Match.new(made => Any, hash => Map.new((:mdHTMLTag(Match.new(made => Any, hash => Map.new(()), pos => 24, list => (Match.new(made => Any, hash => Map.new((:mdHTMLStartTag(Match.new(made => Any, hash => Map.new((:mdHTMLAttribute([Match.new(made => Any, hash => Map.new((:mdHTMLAttrName(Match.new(made => Any, hash => Map.new(()), pos => 7, list => (), from => 3, orig => "<a href=\"keyword\&quot;\">")),:mdHTMLAttrVal(Match.new(made => Any, hash => Map.new((:mdHTMLValue(Match.new(made => Any, hash => Map.new((:mdHTMLCharText([Match.new(made => Any, hash => Map.new(()), pos => 16, list => (), from => 9, orig => "<a href=\"keyword\&quot;\">"), Match.new(made => Any, hash => Map.new(()), pos => 22, list => (), from => 22, orig => "<a href=\"keyword\&quot;\">")]),:mdHTMLEntity([Match.new(made => Any, hash => Map.new((:mdHTMLCharReference(Match.new(made => Any, hash => Map.new(()), pos => 21, list => (Match.new(made => Any, hash => Map.new(()), pos => 21, list => (), from => 17, orig => "<a href=\"keyword\&quot;\">"),), from => 17, orig => "<a href=\"keyword\&quot;\">")))), pos => 22, list => (), from => 16, orig => "<a href=\"keyword\&quot;\">")]))), pos => 22, list => (), from => 9, orig => "<a href=\"keyword\&quot;\">")))), pos => 23, list => (), from => 8, orig => "<a href=\"keyword\&quot;\">")))), pos => 23, list => (), from => 3, orig => "<a href=\"keyword\&quot;\">")]),:mdHTMLTagName(Match.new(made => Any, hash => Map.new((:alnum([]),:alpha(Match.new(made => Any, hash => Map.new(()), pos => 2, list => (), from => 1, orig => "<a href=\"keyword\&quot;\">")))), pos => 2, list => (), from => 1, orig => "<a href=\"keyword\&quot;\">")))), pos => 23, list => (), from => 1, orig => "<a href=\"keyword\&quot;\">")))), pos => 23, list => (), from => 1, orig => "<a href=\"keyword\&quot;\">"),), from => 0, orig => "<a href=\"keyword\&quot;\">")))), pos => 24, list => (), from => 0, orig => "<a href=\"keyword\&quot;\">"),
        },
        "single-quoted attribute value / named char at end" =>
        {
            tag => q{<a href='keyword&quot;'>},
            struct =>
                Match.new(made => Any, hash => Map.new((:mdHTMLTag(Match.new(made => Any, hash => Map.new(()), pos => 24, list => (Match.new(made => Any, hash => Map.new((:mdHTMLStartTag(Match.new(made => Any, hash => Map.new((:mdHTMLAttribute([Match.new(made => Any, hash => Map.new((:mdHTMLAttrName(Match.new(made => Any, hash => Map.new(()), pos => 7, list => (), from => 3, orig => "<a href='keyword\&quot;'>")),:mdHTMLAttrVal(Match.new(made => Any, hash => Map.new((:mdHTMLValue(Match.new(made => Any, hash => Map.new((:mdHTMLCharText([Match.new(made => Any, hash => Map.new(()), pos => 16, list => (), from => 9, orig => "<a href='keyword\&quot;'>"), Match.new(made => Any, hash => Map.new(()), pos => 22, list => (), from => 22, orig => "<a href='keyword\&quot;'>")]),:mdHTMLEntity([Match.new(made => Any, hash => Map.new((:mdHTMLCharReference(Match.new(made => Any, hash => Map.new(()), pos => 21, list => (Match.new(made => Any, hash => Map.new(()), pos => 21, list => (), from => 17, orig => "<a href='keyword\&quot;'>"),), from => 17, orig => "<a href='keyword\&quot;'>")))), pos => 22, list => (), from => 16, orig => "<a href='keyword\&quot;'>")]))), pos => 22, list => (), from => 9, orig => "<a href='keyword\&quot;'>")))), pos => 23, list => (), from => 8, orig => "<a href='keyword\&quot;'>")))), pos => 23, list => (), from => 3, orig => "<a href='keyword\&quot;'>")]),:mdHTMLTagName(Match.new(made => Any, hash => Map.new((:alnum([]),:alpha(Match.new(made => Any, hash => Map.new(()), pos => 2, list => (), from => 1, orig => "<a href='keyword\&quot;'>")))), pos => 2, list => (), from => 1, orig => "<a href='keyword\&quot;'>")))), pos => 23, list => (), from => 1, orig => "<a href='keyword\&quot;'>")))), pos => 23, list => (), from => 1, orig => "<a href='keyword\&quot;'>"),), from => 0, orig => "<a href='keyword\&quot;'>")))), pos => 24, list => (), from => 0, orig => "<a href='keyword\&quot;'>"),
        },
        "keyword attribute value / named char at start" =>
        {
            tag => "<a href=&apos;keyword>",
            struct =>
                Match.new(hash => Map.new((:mdHTMLTag(Match.new(hash => Map.new(()), made => Any, list => (Match.new(hash => Map.new((:mdHTMLStartTag(Match.new(hash => Map.new((:mdHTMLAttribute([Match.new(hash => Map.new((:mdHTMLAttrName(Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 7, from => 3)),:mdHTMLAttrVal(Match.new(hash => Map.new((:mdHTMLValue(Match.new(hash => Map.new((:mdHTMLCharText([Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 8, from => 8), Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 21, from => 14)]),:mdHTMLEntity([Match.new(hash => Map.new((:mdHTMLCharReference(Match.new(hash => Map.new(()), made => Any, list => (Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 13, from => 9),), orig => "<a href=\&apos;keyword>", pos => 13, from => 9)))), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 14, from => 8)]))), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 21, from => 8)))), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 21, from => 8)))), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 21, from => 3)]),:mdHTMLTagName(Match.new(hash => Map.new((:alnum([]),:alpha(Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 2, from => 1)))), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 2, from => 1)))), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 21, from => 1)))), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 21, from => 1),), orig => "<a href=\&apos;keyword>", pos => 22, from => 0)))), made => Any, list => (), orig => "<a href=\&apos;keyword>", pos => 22, from => 0),
        },
        "double-quoted attribute value / named char at start" =>
        {
            tag => q{<a href="&apos;keyword">},
            struct =>
                Match.new(hash => Map.new((:mdHTMLTag(Match.new(hash => Map.new(()), made => Any, list => (Match.new(hash => Map.new((:mdHTMLStartTag(Match.new(hash => Map.new((:mdHTMLAttribute([Match.new(hash => Map.new((:mdHTMLAttrName(Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 7, from => 3)),:mdHTMLAttrVal(Match.new(hash => Map.new((:mdHTMLValue(Match.new(hash => Map.new((:mdHTMLCharText([Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 9, from => 9), Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 22, from => 15)]),:mdHTMLEntity([Match.new(hash => Map.new((:mdHTMLCharReference(Match.new(hash => Map.new(()), made => Any, list => (Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 14, from => 10),), orig => "<a href=\"\&apos;keyword\">", pos => 14, from => 10)))), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 15, from => 9)]))), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 22, from => 9)))), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 23, from => 8)))), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 23, from => 3)]),:mdHTMLTagName(Match.new(hash => Map.new((:alnum([]),:alpha(Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 2, from => 1)))), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 2, from => 1)))), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 23, from => 1)))), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 23, from => 1),), orig => "<a href=\"\&apos;keyword\">", pos => 24, from => 0)))), made => Any, list => (), orig => "<a href=\"\&apos;keyword\">", pos => 24, from => 0),
        },
        "single-quoted attribute value / named char at start" =>
        {
            tag => q{<a href='&apos;keyword'>},
            struct =>
                Match.new(hash => Map.new((:mdHTMLTag(Match.new(hash => Map.new(()), made => Any, list => (Match.new(hash => Map.new((:mdHTMLStartTag(Match.new(hash => Map.new((:mdHTMLAttribute([Match.new(hash => Map.new((:mdHTMLAttrName(Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 7, from => 3)),:mdHTMLAttrVal(Match.new(hash => Map.new((:mdHTMLValue(Match.new(hash => Map.new((:mdHTMLCharText([Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 9, from => 9), Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 22, from => 15)]),:mdHTMLEntity([Match.new(hash => Map.new((:mdHTMLCharReference(Match.new(hash => Map.new(()), made => Any, list => (Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 14, from => 10),), orig => "<a href='\&apos;keyword'>", pos => 14, from => 10)))), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 15, from => 9)]))), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 22, from => 9)))), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 23, from => 8)))), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 23, from => 3)]),:mdHTMLTagName(Match.new(hash => Map.new((:alnum([]),:alpha(Match.new(hash => Map.new(()), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 2, from => 1)))), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 2, from => 1)))), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 23, from => 1)))), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 23, from => 1),), orig => "<a href='\&apos;keyword'>", pos => 24, from => 0)))), made => Any, list => (), orig => "<a href='\&apos;keyword'>", pos => 24, from => 0),
        },
        ;

    plan %tests.keys.elems;

    for %tests.keys -> $test {
        my $match = TestHTML.parse( %tests{$test}<tag> );
        #say $match;
        is-deeply
            $match,
            %tests{$test}<struct>,
            $test;
    }
}, "Matches";

subtest {
    my $match;

    $match = TestHTML.parse("< a>");
    nok($match.defined, "space before tag name");
}, "Non-matches";

done-testing;

# vim: ft=perl6
